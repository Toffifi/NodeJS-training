swagger: "2.0"
info:
  description: "This is a sample server Makeup store server."
  version: "1.0.0"
  title: "Swagger Makeup store"
tags:
  - name: "items"
    description: "Categories of this store"
  - name: "category"
    description: "All items in store"
schemes:
  - "https"
  - "http"
paths:
  /items:
    post:
      tags:
        - "items"
      summary: "Add a new item to the store"
      description: ""
      operationId: "additem"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Item object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        "405":
          description: "Invalid input"
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    put:
      tags:
        - "items"
      summary: "Update an existing item"
      description: ""
      operationId: "updateItem"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Pet"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Item not found"
        "405":
          description: "Validation exception"
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
    get:
      tags:
        - "items"
      summary: "Get all items"
      description: "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing."
      operationId: "findPetsByTags"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tags"
          in: "query"
          description: "Tags to filter by"
          required: true
          type: "array"
          items:
            type: "string"
          collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Item"
        "400":
          description: "Invalid tag value"
      deprecated: true
    delete:
      tags:
        - "items"
      summary: "Deletes an item"
      description: ""
      operationId: "deleteItem"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "itemId"
          in: "path"
          description: "Pet id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
      security:
        - petstore_auth:
            - "write:pets"
            - "read:pets"
  /items/{itemId}:
    get:
      tags:
        - "items"
      summary: "Find item by ID"
      description: "Returns a single pet"
      operationId: "getPetById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "itemId"
          in: "path"
          description: "ID of pet to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
      security:
        - api_key: []

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Item:
    type: "object"
    required:
      - "name"
      - "photoUrls"
    properties:
      id:
        type: "string"
        example: "1"
      categoryId:
        type: "string"
        example: "1"
      name:
        type: "string"
        example: "Mascara"
      price:
        type: "integer"
        format: "int64"
        example: "10.00"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
